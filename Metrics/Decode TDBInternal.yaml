description: Print out table vt_decode_tdbinternal, for reconciliation purposes.

tasks:

### ============= STANDARD PRE-PROCESSING =============
# SETUP run context, and skip duplicate CREATE vt_* statements :
{% set run = namespace(completed=[], variables={}) if run is not defined else run %}
### Macro imported below will validate /correct a subset of variables,
### then export ALL variables to a reconcile_variables.csv
### Hence, this process must run AFTER the "tasks:" node
{% import "coa_util.j2" as macro with context %}
{{ macro.validate_variables(run) }}
### return corrected variables to the main namespace:
{% set startdate     = run.variables['startdate']     %}
{% set enddate       = run.variables['enddate']       %}
{% set your_name     = run.variables['your_name']     %}
{% set your_title    = run.variables['your_title']    %}
{% set customer_name = run.variables['customer_name'] %}
{% set tdver = run.variables['tdver'] %}{% set td15 = run.variables['td15'] %}
{% set td16 = run.variables['td16'] %}{% set td17 = run.variables['td17'] %}
### ============= STANDARD PRE-PROCESSING =============


### -- TCA Not implemented yet:
{% if tca %}
- name: "*** TCA is not yet implemented for this process"
  connect: source
  copy:
    files: ["{{dirs.systasks}}/Metrics/messages/No_TCA.txt"]
{% else %}


{% include "vt_decode_tdbinternal.j2" %}

- name: Export vt_decode_tdbinternal with all data
  connect: source
  export:
    file: decode_tdbinternal.csv
    sql: Select * from vt_decode_tdbinternal order by DatabaseName


- name: Create comparative summary of internal vs customer databases
  connect: source
  execute:
    sql: |
      create volatile table vt_decode_tdbinternal_summary as(
      select
       case when i.DatabaseName is not null then i.DatabaseName else 'Customer' end as DatabaseName
      ,case when i.DatabaseName is not null then i.DatabaseUse else 'Customer' end as DatabaseUse
      ,count(Exclude_VantageUnit_Flag) as Exclude_VantageUnit_Flag
      ,count(Exclude_Performance_Flag) as Exclude_Performance_Flag
      ,count(distinct d.DatabaseName) as DatabaseCount
      ,count(distinct t.DatabaseName||'.'||t.TableName) as ObjectCount
      from dbc.TablesV t
      join dbc.DatabasesV d
        on t.DatabaseName = d.DatabaseName
      left outer join vt_decode_tdbinternal i
        on i.DatabaseName = d.DatabaseName
      Group by 1,2
      ) with data no primary index on commit preserve rows


- name: Export full summary of internal vs customer databases
  connect: source
  export:
    file: decode_dbexclusion_summary.csv
    sql: Select * from vt_decode_tdbinternal_summary order by ObjectCount desc


- name: Export comparative aggregate of internal vs customer databases
  connect: source
  export:
    file: decode_dbexclusion_summary1.csv
    sql: |
      Select DatabaseName, ObjectCount as "Object Count"
      from vt_decode_tdbinternal_summary
      order by ObjectCount desc

- name: Chart TD internal database volume
  chart:
    command: chart/barline_xLabels_yBar_yLine.py
    params:
      - "file:decode_dbexclusion_summary1.csv"
      - "title:TD Internal Databases (Log Scale) - {{ siteid }}"
      - "height:6"
      - "width:18"
      - "legendy:1"
      - "xrotate:90"
      - "barlogscale:True"


- name: Export comparative aggregate of internal databases by use
  connect: source
  export:
    file: decode_dbexclusion_summary2.csv
    sql: |
      Select DatabaseUse as "Database Use"
      ,sum(DatabaseCount) as "Database Count"
      ,sum(ObjectCount) as "Object Count"
      from vt_decode_tdbinternal_summary
      where DatabaseName <> 'Customer'
      group by 1
      order by 2 desc

- name: Chart TD internal database volume
  chart:
    command: chart/barline_xLabels_yBar_yLine.py
    params:
      - "file:decode_dbexclusion_summary2.csv"
      - "title:TD Internal Databases by Use - {{ siteid }}"
      - "height:6"
      - "width:12"
      - "legendy:1"
      - "xrotate:90"

## end TCA Check
{% endif %}
