description: Print out table vt_decode_appid, for reconciliation purposes.

tasks:

### ============= STANDARD PRE-PROCESSING =============
# SETUP run context, and skip duplicate CREATE vt_* statements :
{% set run = namespace(completed=[], variables={}) if run is not defined else run %}
### Macro imported below will validate /correct a subset of variables,
### then export ALL variables to a reconcile_variables.csv
### Hence, this process must run AFTER the "tasks:" node
{% import "coa_util.j2" as macro with context %}
{{ macro.validate_variables(run) }}
### return corrected variables to the main namespace:
{% set startdate     = run.variables['startdate']     %}
{% set enddate       = run.variables['enddate']       %}
{% set your_name     = run.variables['your_name']     %}
{% set your_title    = run.variables['your_title']    %}
{% set customer_name = run.variables['customer_name'] %}
{% set tdver = run.variables['tdver'] %}{% set td15 = run.variables['td15'] %}
{% set td16 = run.variables['td16'] %}{% set td17 = run.variables['td17'] %}
### ============= STANDARD PRE-PROCESSING =============


### -- TCA Not implemented yet:
{% if tca %}
- name: "*** TCA is not yet implemented for this process"
  connect: source
  copy:
    files: ["{{dirs.systasks}}/Metrics/messages/No_TCA.txt"]
{% else %}


{% set chart     = True  if chart     is not defined else chart %}
{% set save_prework = True %}
{% include "vt_decode_appid.j2" %}


- name: Export vt_decode_appid with all data
  connect: source
  export:
    file: decode_appid_full.csv
    sql: |
      select distinct
       AppID_Export as AppID
      ,Pattern_Type
      ,AppID_Pattern
      ,Application
      ,Company
      ,Usage
      ,Requests
      ,Statements
      ,CPU_Sec
      ,DayCount
      ,Priority
      ,Data_Source
      from vt_decode_appid
      order by Priority


- name:  "Drop interim vt_decode_appid_load"
  connect: source
  execute:
    sql: drop table vt_decode_appid_load




{% if chart %}
{% set rptlvls = ['Application','Company','Usage'] %}
{% for rptlvl in rptlvls %}

- name: "Export data for charting: {{ rptlvl }}"
  connect: source
  export:
    file: decode_appid_chart_{{ rptlvl }}.csv
    sql: |
      select
       {{ rptlvl }} -- xaxis
      ,cast(sum(CPU_Sec)    as decimal(18,4))/max(DayCount) as "CPU Seconds per Day" -- bar
      ,cast(sum(Requests)   as decimal(18,4))/max(DayCount) as "Requests per Day"    -- line1
      ,cast(sum(Statements) as decimal(18,4))/max(DayCount) as "Statements per Day"  -- line2
      from vt_decode_appid
      group by 1

- name: "Chart (linear): {{ rptlvl }}"
  chart:
    command: chart/barline_xLabels_yBar_yLine.py
    params:
      - "file:decode_appid_chart_{{ rptlvl }}.csv"
      - "title:Application Breakout: {{ rptlvl }} - {{ siteid }}"
      - "height:5"
      - "width:15"
      - "xrotate:90"
      - "legendy:1.1"
      - "pngfile:decode_appid_chart_{{ rptlvl }}_linear.png"

- name: "Chart (log): {{ rptlvl }}"
  chart:
    command: chart/barline_xLabels_yBar_yLine.py
    params:
      - "file:decode_appid_chart_{{ rptlvl }}.csv"
      - "title:Application Breakout: {{ rptlvl }} - {{ siteid }}"
      - "height:5"
      - "width:15"
      - "xrotate:90"
      - "legendy:1.1"
      - "pngfile:decode_appid_chart_{{ rptlvl }}_log.png"
      - "logscale:true"

{% endfor %}
{% endif %}

## end TCA Check
{% endif %}
