description: Generate vt_dbc_column_summary containing summary information on all columns in the database (from dbc.ColumnsV), including data types, column types, identity columns, formatted flags, as well as aggregated categories, along with column counts.  This is all summary only, and does NOT include column/table/database names.

tasks:

### ============= STANDARD PRE-PROCESSING =============
# SETUP run context, and skip duplicate CREATE vt_* statements :
{% set run = namespace(completed=[], variables={}) if run is not defined else run %}
### Macro imported below will validate /correct a subset of variables,
### then export ALL variables to a reconcile_variables.csv
### Hence, this process must run AFTER the "tasks:" node
{% import "coa_util.j2" as macro with context %}
{{ macro.validate_variables(run) }}
### return corrected variables to the main namespace:
{% set startdate     = run.variables['startdate']     %}
{% set enddate       = run.variables['enddate']       %}
{% set your_name     = run.variables['your_name']     %}
{% set your_title    = run.variables['your_title']    %}
{% set customer_name = run.variables['customer_name'] %}
{% set tdver = run.variables['tdver'] %}{% set td15 = run.variables['td15'] %}
{% set td16 = run.variables['td16'] %}{% set td17 = run.variables['td17'] %}
### ============= STANDARD PRE-PROCESSING =============


{% include "vt_dbc_column_summary.j2" %}

- name: Export vt_dbc_column_summary for reconciliation
  connect: source
  export:
    file: dbc_column_summary.csv
    sql: Select * from vt_dbc_column_summary

- name: Export vt_dbc_column_summary for charting
  connect: source
  export:
    file: dbc_column_count_by_datatype.csv
    sql: |
      Select Column_Category as "Column Category"
      ,sum(Column_Count) as "Column Count"
      from vt_dbc_column_summary
      where Column_Count <>0
      group by 1 order by 2 desc

- name: Chart column counts by data type
  chart:
    command: chart/barline_xLabels_yBar_yLine.py
    params:
      - "file:dbc_column_count_by_datatype.csv"
      - "title:Column Counts by DataType - {{ siteid }}"
      - "height:6"
      - "width:18"
      - "xrotate:90"

- name: Chart column counts by data type, logscale
  chart:
    command: chart/barline_xLabels_yBar_yLine.py
    params:
      - "file:dbc_column_count_by_datatype.csv"
      - "title:Column Counts by DataType - {{ siteid }}"
      - "height:6"
      - "width:18"
      - "xrotate:90"
      - "barlogscale:True"
      - "pngfile:dbc_column_count_by_datatype_log.png"
