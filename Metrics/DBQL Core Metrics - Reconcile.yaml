description: Execute all flavors of DBQL Core Metrics, and perform a reconciliation to ensure they all match.   Holding all variants of DBQL_Core in spool can cause spool-outs, so keep the time period selected fairly low, i.e. a few weeks.
version: 1
tasks:

{% set dbql_core_daily = True %}
{% set dbql_core_hour  = True %}
{% set dbql_core_user  = True %}
{% set drop_vt_dbql_core_temp = False %}

# due to the potential spool impact, let's shorten the default
# for startdate and enddate, just in case they are left undefined:
{% set startdate = 'DATE-8' if startdate is not defined else startdate %}
{% set enddate   = 'DATE-1' if   enddate is not defined else enddate   %}

{% include "vt_dbql_core.j2" %}


- name: Reconcile DBQLogTbl counts to dbql_core daily, hour, and user
  connect: source
  export:
    file: reconcile_dbql_core.csv
    sql: |
      Select
       'vt_dbql_core_temp' as vt_Name
      ,cast('Original DBQL Extract' as varchar(256)) as vt_Purpose
      ,count(distinct LogDate) as LogDate_Count
      ,cast(count(*) as BigInt) as Row_Cnt
      ,cast(sum(  Request_Total_Cnt) as BigInt) as Request_Cnt
      ,cast(sum(Statement_Total_Cnt) as BigInt) as Statement_Cnt
      ,sum(CPU_AMP_Sec) as CPU_AMP_Sec
      from vt_dbql_core_temp
        union all
      Select
       'vt_dbql_core_daily'
      ,'Enriched vt_dbql_core_DAILY'
      ,count(distinct LogDate) as LogDate_Count
      ,cast(count(*) as BigInt) as Row_Cnt
      ,cast(sum(  Request_Total_Cnt) as BigInt) as Request_Cnt
      ,cast(sum(Statement_Total_Cnt) as BigInt) as Statement_Cnt
      ,sum(CPU_AMP_Sec) as CPU_AMP_Sec
      from vt_dbql_core_daily
        union all
      Select
       'vt_dbql_core_user'
      ,'Enriched vt_dbql_core_USER'
      ,count(distinct LogDate) as LogDate_Count
      ,cast(count(*) as BigInt) as Row_Cnt
      ,cast(sum(  Request_Total_Cnt) as BigInt) as Request_Cnt
      ,cast(sum(Statement_Total_Cnt) as BigInt) as Statement_Cnt
      ,sum(CPU_AMP_Sec) as CPU_AMP_Sec
      from vt_dbql_core_user
        union all
      Select
       'vt_dbql_core_hour'
      ,'Enriched vt_dbql_core_HOUR'
      ,count(distinct LogDate) as LogDate_Count
      ,cast(count(*) as BigInt) as Row_Cnt
      ,cast(sum(  Request_Total_Cnt) as BigInt) as Request_Cnt
      ,cast(sum(Statement_Total_Cnt) as BigInt) as Statement_Cnt
      ,sum(CPU_AMP_Sec) as CPU_AMP_Sec
      from vt_dbql_core_hour
