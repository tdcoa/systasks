description: Export table vt_dbc_indices_by_database
version: 0
tasks:
### ============= STANDARD PRE-PROCESSING =============
# SETUP run context, and skip duplicate CREATE vt_* statements :
{% set run = namespace(completed=[], dates=[]) if run is not defined else run %}
### import macro to harden start/end dates:
{% import "coa_util.j2" as macro with context %}
{{ macro.harden_dates(run, startdate, enddate) }}
{% set startdate = run.dates[0] %}
{% set enddate = run.dates[1] %}
### ============= STANDARD PRE-PROCESSING =============

{% include "vt_dbc_indices_by_database.j2" %}

- name: Export vt_dbc_indices_by_database for reconciliation
  connect: source
  export:
    file: dbc_indices_by_database.csv
    sql: Select * from vt_dbc_indices_by_database order by 1

- name: Export aggregate vt_dbc_indices_by_database for charting
  connect: source
  export:
    file: dbc_indices_by_database_summary.csv
    sql: |
      select IndexType_Desc as "Index Type"
      ,sum(index_Count) as "Index Count"
      ,sum(Distinct_Column_Count) as "Distinct Column Count"
      from vt_dbc_indices_by_database
      group by 1  order by 2 desc

- name: Chart index counts by data type
  chart:
    command: chart/barline_xLabels_yBar_yLine.py
    params:
      - "file:dbc_indices_by_database_summary.csv"
      - "title:Index Count - {{ siteid }}"
      - "height:6"
      - "width:18"
      - "xrotate:90"
      - "legendy:1.00"

- name: Chart index counts by data type
  chart:
    command: chart/barline_xLabels_yBar_yLine.py
    params:
      - "file:dbc_indices_by_database_summary.csv"
      - "title:Index Count - {{ siteid }}"
      - "height:6"
      - "width:18"
      - "xrotate:90"
      - "legendy:1.00"
      - "barlogscale:True"
      - "pngfile:dbc_indices_by_database_summary_log.png"
