description: Print out table vt_transfer_bytes_in_out, for reconciliation purposes.

tasks:

### ============= STANDARD PRE-PROCESSING =============
# SETUP run context, and skip duplicate CREATE vt_* statements :
{% set run = namespace(completed=[], variables={}) if run is not defined else run %}
### Macro imported below will validate /correct a subset of variables,
### then export ALL variables to a reconcile_variables.csv
### Hence, this process must run AFTER the "tasks:" node
{% import "coa_util.j2" as macro with context %}
{{ macro.validate_variables(run) }}
### return corrected variables to the main namespace:
{% set startdate     = run.variables['startdate']     %}
{% set enddate       = run.variables['enddate']       %}
{% set your_name     = run.variables['your_name']     %}
{% set your_title    = run.variables['your_title']    %}
{% set customer_name = run.variables['customer_name'] %}
{% set tdver = run.variables['tdver'] %}{% set td15 = run.variables['td15'] %}
{% set td16 = run.variables['td16'] %}{% set td17 = run.variables['td17'] %}
### ============= STANDARD PRE-PROCESSING =============


{% include "vt_transfer_bytes_in_out.j2" %}

- name: "Export transfer bytes in/out of platform, by day, for charting"
  connect: source
  export:
    file: data_transfer.csv
    sql: |
      SELECT LogDate
      ,SUM(Inbound_Bytes)  as "Inbound Bytes--#27C1BD"
      ,SUM(Outbound_Bytes) as "Outbound Bytes--#636363"
      FROM vt_transfer_bytes_in_out
      GROUP BY LogDate
      ORDER BY LogDate

- name: "Chart transfer bytes in/out of of the platform, by day"
  chart:
    command: chart/line_xDate_yElse.py
    params:
      - "csvfile:data_transfer.csv"
      - "title:Data Transfer - {{ siteid }}"
      - "height:4.5"
      - "width:10"


- name: Re-export vt_transfer_bytes_in_out entirety
  connect: source
  export:
    file: transfer_bytes_in_out.csv
    sql:  Select * from vt_transfer_bytes_in_out order by 1
