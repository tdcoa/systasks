{% set run = namespace(completed=[]) if run is not defined else run %}
{% if not 'vt_disk_space_by_table' in run.completed %}

- name:  Create vt_disk_space_by_table
  connect: source
  execute:
    sql: |
      create volatile table vt_disk_space_by_table as
      (
        Select
         t.LogDate
        ,t.TableName
        ,d.DatabaseName
        ,t.CurrentPerm_GB
        ,t.PeakPerm_GB
        ,d.Database_MaxPerm_GB
        ,d.System_MaxPerm_GB
        ,zeroifnull(cast(CurrentPerm_GB / nullifzero(Database_MaxPerm_GB) as decimal(32,6))) as Database_Fill_Pct
        ,zeroifnull(cast(CurrentPerm_GB / nullifzero(System_MaxPerm_GB) as decimal(32,6))) as System_Fill_Pct
        from (
              Select
              {% if pdcr %}
               LogDate
              {% else %}
               DATE-1 as LogDate
              {% endif %}
              ,DatabaseName
              ,TableName
              ,cast(sum(CurrentPerm)/1e9 as decimal(32,6)) as CurrentPerm_GB
              ,cast(sum(PeakPerm)/1e9    as decimal(32,6)) as PeakPerm_GB
              {% if pdcr %}
              from pdcrinfo.TableSpace_Hst
              where LogDate between {{ startdate | default('DATE-15') }} and {{ enddate | default('DATE-1') }}
              {% else %}
              from dbc.TableSize
              {% endif %}
              group by 1,2,3
             ) as t
        join (
             Select
             {% if pdcr %}
              LogDate
             {% else %}
              DATE-1 as LogDate
             {% endif %}
             ,DatabaseName
             ,cast(sum(MaxPerm)/1e9 as decimal(32,6)) as Database_MaxPerm_GB
             ,cast(sum(Database_MaxPerm_GB)over(partition by LogDate) as decimal(32,6)) as System_MaxPerm_GB
             {% if pdcr %}
             from pdcrinfo.DatabaseSpace_hst
             where LogDate between {{ startdate | default('DATE-15') }} and {{ enddate | default('DATE-1') }}
             {% else %}
             from dbc.DiskSpace
             {% endif %}
             group by 1,2
            ) as d
         on t.LogDate = d.LogDate
        and t.DatabaseName = d.DatabaseName
      )with data
      primary index (LogDate, TableName) on commit preserve rows

- name: Collect Stats on vt_disk_space_by_table
  connect: source
  execute:
    sql: collect stats on vt_disk_space_by_table column(LogDate, TableName)

{% endif %}
{{ run.completed.append('vt_disk_space_by_table') or '' }}
