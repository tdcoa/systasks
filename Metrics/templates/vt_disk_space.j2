{% set run = namespace(completed=[]) if run is not defined else run %}
{% if not 'vt_disk_space' in run.completed %}

{% set override_maxperm_tb = 0 if override_maxperm_tb is not defined else override_maxperm_tb %}

- name: Create vt_disk_space_prework_tablesize
  connect: source
  execute:
    sql: |
      create volatile table vt_disk_space_prework_tablesize   as (
          Select
           {{ 'DATE-1 as' if not pdcr }} LogDate
          ,DatabaseName
          ,TableName
          ,cast(sum(CurrentPerm)/1e9 as decimal(32,6)) as Table_CurrentPerm_GB
          ,cast(sum(PeakPerm)/1e9    as decimal(32,6)) as Table_PeakPerm_GB
          ,count(Logdate)over(partition by DatabaseName, TableName) as Days_Table_Exists
          ,({{ enddate | default('DATE-1') }}(DATE, format 'YYYY-MM-DD')) -
          ({{ startdate | default('DATE-15') }}(DATE, format 'YYYY-MM-DD')) + 1 as Total_Days_in_Range
          ,Days_Table_Exists / (Total_Days_in_Range * 1.0000) as Table_Scale_Pct
          {% if pdcr %}
          from pdcrinfo.TableSpace_Hst
          where LogDate between {{ startdate | default('DATE-15') }} and {{ enddate | default('DATE-1') }}
          and currentperm > 0
          {% else %}
          from dbc.TableSize
          where currentperm > 0
          {% endif %}
          group by 1,2,3
      ) with data primary index (LogDate, DatabaseName, TableName)  on commit preserve rows

- name: Collect Stats on vt_disk_space_prework_tablesize
  connect: source
  execute:
    sql: |
      collect stats
            column (LogDate, DatabaseName, TableName)
           ,column (LogDate, DatabaseName)
           ,column (LogDate)
      on vt_disk_space_prework_tablesize


- name: Create vt_disk_space_prework_databasespace
  connect: source
  execute:
    sql: |
      create volatile table   vt_disk_space_prework_databasespace   as (
          Select
           {{ 'DATE-1 as' if not pdcr }} LogDate
          ,DatabaseName
          ,cast(sum(CURRENTPERM) /1E9 as decimal(18,2)) as Database_CurrentPerm_GB
          ,cast(sum(PEAKPERM)    /1E9 as decimal(18,2)) as Database_PeakPerm_GB
          ,cast(sum(MAXPERM)     /1E9 as decimal(18,2)) as Database_MaxPerm_GB
          {% if override_maxperm_tb == 0 %}
          ,cast(sum(Database_MaxPerm_GB)over(partition by LogDate) as decimal(32,6)) as System_MaxPerm_GB
          {% else %}
          ,cast( {{ override_maxperm_tb * 1000 }} as decimal(32,6)) as System_MaxPerm_GB
          {% endif %}
          ,cast(sum(Database_CurrentPerm_GB)over(partition by LogDate) as decimal(32,6)) as System_CurrentPerm_GB
          {% if pdcr %}
          from pdcrinfo.DatabaseSpace_hst
          where LogDate between {{ startdate | default('DATE-15') }} and {{ enddate | default('DATE-1') }}
          {% else %}
          from dbc.DiskSpace
          {% endif %}
          group by 1,2
      ) with data primary index (LogDate, DatabaseName)  on commit preserve rows


- name: Collect Stats on vt_disk_space_prework_databasespace
  connect: source
  execute:
    sql: |
      collect stats
           column (LogDate, DatabaseName)
          ,column (LogDate)
      on vt_disk_space_prework_databasespace


- name: Create vt_disk_space
  connect: source
  execute:
    sql: |
      create volatile table vt_disk_space as
      (
        Select
         t.LogDate
        ,System_MaxPerm_GB
        ,System_CurrentPerm_GB
        ,zeroifnull(System_CurrentPerm_GB / nullifzero(System_MaxPerm_GB)) as System_Fill_Pct
        ,d.DatabaseName
        ,Database_CurrentPerm_GB
        ,Database_PeakPerm_GB
        ,Database_MaxPerm_GB
        ,zeroifnull(Database_CurrentPerm_GB / nullifzero(Database_MaxPerm_GB))   as Database_Fill_Pct
        ,zeroifnull(Database_CurrentPerm_GB / nullifzero(System_MaxPerm_GB))     as Database_System_Fill_Pct
        ,zeroifnull(Database_MaxPerm_GB / nullifzero(System_MaxPerm_GB))         as Database_System_MaxPerm_Pct
        ,zeroifnull(Database_CurrentPerm_GB / nullifzero(System_CurrentPerm_GB)) as Database_System_CurPerm_Pct
        ,t.TableName
        ,Table_CurrentPerm_GB
        ,Table_PeakPerm_GB
        ,zeroifnull(Table_CurrentPerm_GB / nullifzero(Database_MaxPerm_GB))      as Table_Database_Fill_Pct
        ,zeroifnull(Table_CurrentPerm_GB / nullifzero(Database_CurrentPerm_GB))  as Table_Database_CurPerm_Pct
        ,zeroifnull(Table_CurrentPerm_GB / nullifzero(System_MaxPerm_GB))        as Table_System_Fill_Pct
        ,zeroifnull(Table_CurrentPerm_GB / nullifzero(System_CurrentPerm_GB))    as Table_System_CurPerm_Pct
        ,Days_Table_Exists
        ,Total_Days_in_Range
        ,Table_Scale_Pct
        from vt_disk_space_prework_tablesize as t
        join vt_disk_space_prework_databasespace as d
         on t.LogDate = d.LogDate
        and t.DatabaseName = d.DatabaseName
      ) with data primary index (LogDate, DatabaseName, TableName) on commit preserve rows


- name: Collect Stats on vt_disk_space
  connect: source
  execute:
    sql: |
      collect stats
           column (LogDate, DatabaseName, TableName)
          ,column (LogDate, DatabaseName)
          ,column (LogDate, TableName)
          ,column (LogDate)
      on vt_disk_space


{% if not save_prework %}
- name: "Drop prework table: vt_disk_space_prework_databasespace"
  connect: source
  execute:
    sql: drop table vt_disk_space_prework_databasespace

- name: "Drop prework table: vt_disk_space_prework_tablesize"
  connect: source
  execute:
    sql: drop table vt_disk_space_prework_tablesize
{% endif %}

{% endif %}
{{ run.completed.append('vt_disk_space') or '' }}
