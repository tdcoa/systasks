description: Vantage Health Check Trends for the main metrics to report Current Month to previous month, Quarter to quarter, current month to 6 months before differences.
version: 1.0

### VHC changes should be made to the full version first,
### then copy/pasted to the OAP version and below toggled:
{% set vhc_on_a_page = false %}
### Thus, this should be the only difference between the two docs
### soas to keep the logic identical / from drifting apart


# DEFINE STARTING STATE OF VARIABLES
{% set startdate = 'DATE-42'   if startdate is not defined else startdate %}
{% set enddate   = 'DATE-1'    if enddate   is not defined else enddate %}
{% set export_detail = False   if export_detail is not defined else export_detail %}
{% set override_maxperm_tb = 0 if override_maxperm_tb is not defined else override_maxperm_tb %}
{% set   wlm_cod_cpu = 1.0000    if   wlm_cod_cpu is not defined else  wlm_cod_cpu  %}
{% set    pm_cod_cpu = 1.0000    if    pm_cod_cpu is not defined else   pm_cod_cpu  %}
{% set  epod_cod_cpu = 1.0000    if  epod_cod_cpu is not defined else epod_cod_cpu  %}
{% set full_cod_cpu = (wlm_cod_cpu * pm_cod_cpu * epod_cod_cpu) | round(6) %}
{% set workload_cod_cpu = (wlm_cod_cpu * epod_cod_cpu) | round(6) %}

{% set    wlm_cod_io = 1.0000    if    wlm_cod_io is not defined else  wlm_cod_io   %}
{% set   epod_cod_io = 1.0000    if   epod_cod_io is not defined else epod_cod_io   %}
{% set workload_cod_io = wlm_cod_io * epod_cod_io | round(6) %}
{% set full_cod_io = workload_cod_io %}

{% set td15 = True if tdver[:2]=='15' else False %}

tasks:
        


### ============= STANDARD PRE-PROCESSING =============
# SETUP run context, and skip duplicate CREATE vt_* statements :
{% set run = namespace(completed=[], variables={}) if run is not defined else run %}
### Macro imported below will validate /correct a subset of variables,
### then export ALL variables to a reconcile_variables.csv
### Hence, this process must run AFTER the "tasks:" node
{% import "Coa_util.j2" as macro with context %}
{{ macro.validate_variables(run) }}
### return corrected variables to the main namespace:
{% set startdate     = run.variables['startdate']     %}
{% set enddate       = run.variables['enddate']       %}
{% set your_name     = run.variables['your_name']     %}
{% set your_title    = run.variables['your_title']    %}
{% set customer_name = run.variables['customer_name'] %}
{% set tdver = run.variables['tdver'] %}{% set td15 = run.variables['td15'] %}
{% set td16 = run.variables['td16'] %}{% set td17 = run.variables['td17'] %}
### ============= STANDARD PRE-PROCESSING =============




- name: "Export Variables to a reconcile file"
  connect: source
  export:
    file: vhc--reconcile_variables.csv
    sql: |
      select
        {{ startdate }} as StartDate
       ,{{ enddate }} as EndDate
       ,'{{ export_detail }}' as Export_Details
       ,'{{ process_chunks }}' as Process_Chunks
       ,'{{ tca }}'              as TCA
       from (sel 1 one ) a

{% set logts = true %}                                                                                        
{% include "vt_system_cpu_by_day_trends.j2" %}
{% include "vt_system_io_by_day.j2" %}


# fetch COD limits from ResUsage              
- name: "Retrieve COD limit"
  connect: source
  export:
    file: oap--COD.csv
    sql: |
         SELECT 'CPULimit',  trim(cast(CPULimit as decimal(9,2))) as CPULimit  FROM (Select avg(CPU_COD_Total_Active_Pct) * 100 as CPULimit from vt_System_CPU_by_Day) As d
         union all
         SELECT 'IOLimit',  trim(cast(IOLimit as decimal(9,2))) as IOLimit FROM (Select avg(IO_COD_Total_Active_Pct) * 100 as IOLimit from vt_system_io_by_day) As d
         union all
         SELECT '# Nodes', cast(count(distinct nodeid) as varchar(16)) FROM dbc.resusagespma where TheDate = current_date
         union all
         SELECT * from (SELECT '# AMPs' as label, cast(HASHAMP() + 1 as varchar(16)) as total_amps) x
         order by 1

### -- TCA Not implemented yet:
{% if tca %}
- name: "*** TCA is not yet implemented for this process"
  connect: source
  copy:
    files: ["{{dirs.systasks}}/Metrics/messages/No_TCA.txt"]
{% else %}

{% include "vt_site_info.j2" %}
- name: "Export Site and CSM information (if available) for pptx title slide"
  connect: source
  export:
    file: vhc--intro.csv
    sql: Select * from vt_site_info
    
{% include "vt_disk_space_trends.j2" %}

- name: Export disk space Monthly summary - VHC
  connect: source
  export:
    file: vhc--diskspace_monthly_Summary.csv
    sql: |
      select
       TO_CHAR(LogDate, 'YYYY-MM') AS Month_Year
      ,cast(cast(avg(System_MaxPerm_GB)/1024     as decimal(18,2) format 'ZZZ,ZZZ,ZZZ,ZZ9.99') as varchar(32)) as "Max Available Space (TB)"
      ,cast(cast(avg(System_MaxPerm_GB)/1024     as decimal(18,2)) as varchar(32)) as "Max Available Space(TB)" --For Chart
      ,cast(cast(avg(System_CurrentPerm_GB)/1024 as Decimal(18,2) format 'ZZZ,ZZZ,ZZZ,ZZ9.99') as varchar(32)) as "Used Space (TB)"
      ,cast(cast(avg(System_CurrentPerm_GB)/1024 as Decimal(18,2)) as varchar(32)) as "Used Space(TB)" --For Chart
      ,cast(cast(
       (cast(avg(System_CurrentPerm_GB) as Decimal(18,4)) / nullifzero(cast(avg(System_MaxPerm_GB) as Decimal(18,4))))*100
       as Decimal(18,4) format 'Z99.9%') as varchar(32)) "Filled Percent"
      from(
          Select LogDate
          ,Avg(Table_CurrentPerm_GB_New) as System_CurrentPerm_GB
          ,Avg(System_MaxPerm_GB) as System_MaxPerm_GB
          from vt_disk_space
          group by LogDate) a
          group by 1
          order by 1

- name: "Chart for charting: disk space Monthly summary - VHC"
  chart:
    command: chart/ClusteredBar_And_Line.py
    params:
      - "csvfile:vhc--diskspace_monthly_Summary.csv"
      - "x_column:Month_Year"
      - "title:Disk Space Monthly Summary - {{ siteid }}"
      - "height:6"
      - "width:12"
      - "save:True" 
      - "bar_columns:Max Available Space(TB),Used Space(TB)" 
      - "bar_colors:#4E95D9,#E97132"

- name: Export disk space Quarterly summary - VHC
  connect: source
  export:
    file: vhc--diskspace_quarterly_Summary.csv
    sql: |
      select
       cast(extract(year from LogDate) as varchar(4)) || '-Q' || cast(((extract(month from LogDate) - 1) / 3 + 1) as varchar(1)) as "Quarter"
      ,cast(cast(avg(System_MaxPerm_GB)/1024     as decimal(18,2) format 'ZZZ,ZZZ,ZZZ,ZZ9.99') as varchar(32)) as "Max Available Space (TB)"
      ,cast(cast(avg(System_MaxPerm_GB)/1024     as decimal(18,2)) as varchar(32)) as "Max Available Space(TB)" --For Chart
      ,cast(cast(avg(System_CurrentPerm_GB)/1024 as Decimal(18,2) format 'ZZZ,ZZZ,ZZZ,ZZ9.99') as varchar(32)) as "Used Space (TB)"
      ,cast(cast(avg(System_CurrentPerm_GB)/1024 as Decimal(18,2)) as varchar(32)) as "Used Space(TB)" --For Chart
      ,cast(cast(
       (cast(avg(System_CurrentPerm_GB) as Decimal(18,4)) / nullifzero(cast(avg(System_MaxPerm_GB) as Decimal(18,4))))*100
       as Decimal(18,4) format 'Z99.9%') as varchar(32)) "Filled Percent"
      from(
          Select LogDate
          ,Avg(Table_CurrentPerm_GB_New) as System_CurrentPerm_GB
          ,Avg(System_MaxPerm_GB) as System_MaxPerm_GB
          from vt_disk_space
          group by LogDate) a
          group by 1
          order by 1          

- name: "Chart for charting: disk space Quarterly summary - VHC"
  chart:
    command: chart/ClusteredBar_And_Line.py
    params:
      - "csvfile:vhc--diskspace_quarterly_Summary.csv"
      - "x_column:Quarter"      
      - "title:Disk Space Quarterly Summary - {{ siteid }}"
      - "height:6"
      - "width:12"
      - "save:True" 
      - "bar_columns:Max Available Space(TB),Used Space(TB)" 
      - "bar_colors:#4E95D9,#E97132"


### Release Spool:
# ------------------
- name: DROP volatile table to save spool - vt_disk_space
  connect: source
  execute:
    sql: drop table vt_disk_space
    
    
{% set logts = true %}
{% include "vt_system_cpu_by_day_trends.j2" %}


- name: Export System Monthly CPU for Heatmap
  connect: source
  export:
    file: vhc--system_monthly_cpu_heatmap.csv
    sql: |
      select
        TO_CHAR(LogDate, 'YYYY-MM') AS Month_Year
        ,extract(day from logdate) as "day"
        ,cast(avg("CPU Use%") as decimal (18,2)) as "Avg_CPU_Use%"
      From
          (select
           LogDate
          ,cast(cast(sum(CPU_DBS + CPU_OS ) as decimal(38,4)) / sum(CPU_Total) * 100 as decimal(18,2)) as "CPU Use%"
          from vt_System_CPU_by_Day
          group by 1)vt_System_CPU_by_Day
      group by 1,2
      order by 1,2

- name: Chart System Monthly CPU for Heatmap
  chart:
    command: chart/heatmap_xLabel_yLabel_Values.py
    params:
      - csvfilepath:vhc--system_monthly_cpu_heatmap.csv
      - pngfilepath:vhc--system_monthly_cpu_heatmap.png
      - title:Monthly CPU Usage% Heatmap - {{ siteid }}
      - height:6
      - width:{{ (12 * (heatmap_width_scale | default(1.00))) | round(2) }}
      - annotate:{{ annotate_chart | default('True') }}
      - heatmapmin:0
      - heatmapmax:100

- name: Export System Monthly Peak CPU for Heatmap
  connect: source
  export:
    file: vhc--system_monthly_peak_cpu_heatmap.csv
    sql: |
      select
        TO_CHAR(LogDate, 'YYYY-MM') AS Month_Year
        ,extract(day from logdate) as "day"
        ,cast(Max("CPU Use%") as decimal (18,2)) as "Avg_CPU_Use%"
      From
          (select
           LogDate
          ,LogHr as "Hour"
          ,LogMin as "Minute"
          ,cast(cast(sum(CPU_DBS + CPU_OS ) as decimal(38,4)) / sum(CPU_Total) * 100 as decimal(18,2)) as "CPU Use%"
          from vt_System_CPU_by_Day
          group by 1,2,3)vt_System_CPU_by_Day
      group by 1,2
      order by 1,2

- name: Chart System Monthly Peak CPU for Heatmap
  chart:
    command: chart/heatmap_xLabel_yLabel_Values.py
    params:
      - csvfilepath:vhc--system_monthly_peak_cpu_heatmap.csv
      - pngfilepath:vhc--system_monthly_peak_cpu_heatmap.png
      - title:Monthly CPU Usage% Heatmap - {{ siteid }}
      - height:6
      - width:{{ (12 * (heatmap_width_scale | default(1.00))) | round(2) }}
      - annotate:{{ annotate_chart | default('True') }}
      - heatmapmin:0
      - heatmapmax:100
            
- name: Export System Quarterly CPU Summary
  connect: source
  export:
    file: vhc--system_quarterly_cpu_summary.csv
    sql: |
      select
        cast(extract(year from LogDate) as varchar(4)) || '-Q' || cast(((extract(month from LogDate) - 1) / 3 + 1) as varchar(1)) as "Quarter"
        ,cast(avg("CPU Use%") as decimal (18,1)) as "Avg_CPU_Use%"
        ,cast(avg(CPU_COD_Total_Active_Pct) * 100 as decimal (18,1)) as "CPU_Available" 
      From
          (select
           cast(cast(LogDate as date format 'yyyy-mm-dd') as varchar(10)) as "LogDate"
          ,cast(cast(sum(CPU_DBS + CPU_OS ) as decimal(38,4)) / sum(CPU_Total) * 100 as decimal(18,2)) as "CPU Use%"
          ,avg(CPU_COD_Total_Active_Pct) as CPU_COD_Total_Active_Pct
          from vt_System_CPU_by_Day
          group by 1)vt_System_CPU_by_Day
      group by 1
      order by 1

- name: Chart System Quarterly CPU Summary
  chart:
    command: chart/ClusteredBar_And_Line.py
    params:
      - "csvfile:vhc--system_quarterly_cpu_summary.csv"
      - "x_column:Quarter"
      - "title:Quarterly CPU Usage Summary - {{ siteid }}"
      - "height:6"
      - "width:12"
      - "save:True" 
      - "bar_columns:CPU_Available,Avg_CPU_Use%" 
      - "bar_colors:#4E95D9,#E97132"
      - "show_percentage:true"

- name: Export System Monthly CPU Summary
  connect: source
  export:
    file: vhc--system_monthly_cpu_summary.csv
    sql: |
      select
        TO_CHAR(LogDate, 'YYYY-MM') AS Month_Year
        ,cast(avg("CPU Use%") as decimal (18,1)) as "Avg_CPU_Use%"
        ,cast(avg(CPU_COD_Total_Active_Pct) * 100 as decimal (18,1)) as "CPU_Available" 
      From
          (select
           LogDate
          ,cast(cast(sum(CPU_DBS + CPU_OS ) as decimal(38,4)) / sum(CPU_Total) * 100 as decimal(18,2)) as "CPU Use%"
          ,avg(CPU_COD_Total_Active_Pct) as CPU_COD_Total_Active_Pct
          from vt_System_CPU_by_Day
          group by 1)vt_System_CPU_by_Day
      group by 1
      order by 1

- name: Chart System Monthly CPU Summary
  chart:
    command: chart/ClusteredBar_And_Line.py
    params:
      - "csvfile:vhc--system_monthly_cpu_summary.csv"
      - "x_column:Month_Year"
      - "title:Monthly CPU Usage Summary - {{ siteid }}"
      - "height:6"
      - "width:12"
      - "save:True" 
      - "bar_columns:CPU_Available,Avg_CPU_Use%" 
      - "bar_colors:#4E95D9,#E97132"
      - "show_percentage:true"

- name: Export System Monthly Peak CPU Summary
  connect: source
  export:
    file: vhc--system_monthly_peak_cpu_summary.csv
    sql: |
      select
        TO_CHAR(LogDate, 'YYYY-MM') AS Month_Year
        ,cast(avg("Max_CPU_Use%") as decimal (18,1)) as "Avg_CPU_Use%"
        ,cast(avg(CPU_COD_Total_Active_Pct) * 100 as decimal (18,1)) as "CPU_Available"     
      From
          (select
            TO_CHAR(LogDate, 'YYYY-MM') AS Month_Year
            ,logdate
            ,cast(Max("CPU Use%") as decimal (18,2)) as "Max_CPU_Use%"
            ,cast(avg(CPU_COD_Total_Active_Pct) as decimal (18,1)) as CPU_COD_Total_Active_Pct
          From
              (select
               LogDate
              ,LogHr as "Hour"
              ,LogMin as "Minute"
              ,cast(cast(sum(CPU_DBS + CPU_OS ) as decimal(38,4)) / sum(CPU_Total) * 100 as decimal(18,2)) as "CPU Use%"
              ,max(CPU_COD_Total_Active_Pct) as CPU_COD_Total_Active_Pct
              from vt_System_CPU_by_Day
              group by 1,2,3)vt_System_CPU_by_Day
          group by 1,2
          )vt_System_CPU_by_Day
      group by 1
      order by 1

- name: Chart System Monthly Peak CPU Summary
  chart:
    command: chart/ClusteredBar_And_Line.py
    params:
      - "csvfile:vhc--system_monthly_peak_cpu_summary.csv"
      - "x_column:Month_Year"
      - "title:Monthly Peak CPU Usage Summary - {{ siteid }}"
      - "height:6"
      - "width:12"
      - "save:True" 
      - "bar_columns:CPU_Available,Avg_CPU_Use%" 
      - "bar_colors:#4E95D9,#E97132"
      - "show_percentage:true"

- name: Export System Quarterly Peak CPU Summary
  connect: source
  export:
    file: vhc--system_quarterly_peak_cpu_summary.csv
    sql: |
      select
        cast(extract(year from LogDate) as varchar(4)) || '-Q' || cast(((extract(month from LogDate) - 1) / 3 + 1) as varchar(1)) as "Quarter"
        ,cast(avg("Max_CPU_Use%") as decimal (18,1)) as "Avg_CPU_Use%"
        ,cast(avg(CPU_COD_Total_Active_Pct) * 100 as decimal (18,1)) as "CPU_Available"     
      From
          (select
            TO_CHAR(LogDate, 'YYYY-MM') AS Month_Year
            ,logdate
            ,cast(Max("CPU Use%") as decimal (18,2)) as "Max_CPU_Use%"
            ,cast(avg(CPU_COD_Total_Active_Pct) as decimal (18,1)) as CPU_COD_Total_Active_Pct
          From
              (select
               LogDate
              ,LogHr as "Hour"
              ,LogMin as "Minute"
              ,cast(cast(sum(CPU_DBS + CPU_OS ) as decimal(38,4)) / sum(CPU_Total) * 100 as decimal(18,2)) as "CPU Use%"
              ,max(CPU_COD_Total_Active_Pct) as CPU_COD_Total_Active_Pct
              from vt_System_CPU_by_Day
              group by 1,2,3)vt_System_CPU_by_Day
          group by 1,2
          )vt_System_CPU_by_Day
      group by 1
      order by 1
      
- name: Chart System Quarterly Peak CPU Summary
  chart:
    command: chart/ClusteredBar_And_Line.py
    params:
      - "csvfile:vhc--system_quarterly_peak_cpu_summary.csv"
      - "x_column:Quarter"
      - "title:Quarterly Peak CPU Usage Summary - {{ siteid }}"
      - "height:6"
      - "width:12"
      - "save:True" 
      - "bar_columns:CPU_Available,Avg_CPU_Use%" 
      - "bar_colors:#4E95D9,#E97132"
      - "show_percentage:true"
      
      
- name: Export System Daily CPU Comparison
  connect: source
  export:
    file: vhc--system_daily_cpu_comparison.csv
    sql: |
      select
        cast(cast(LogDate as date format 'yyyy-mm-dd') as varchar(10)) as "LogDate"
        ,cast(cast(sum(CPU_DBS + CPU_OS ) as decimal(38,4)) / sum(CPU_Total) * 100 as decimal(18,2)) as "Avg_CPU_Use%"
      From vt_System_CPU_by_Day
      group by 1
      order by 1


### Release Spool:
# ------------------
- name: DROP volatile table to save spool - vt_System_CPU_by_Day
  connect: source
  execute:
    sql: drop table vt_System_CPU_by_Day


{% include "vt_system_io_by_day.j2" %}

- name: Export System Monthly IO for Heatmap
  connect: source
  export:
    file: vhc--system_monthly_io_heatmap.csv
    sql: |
      select
        TO_CHAR(LogDate, 'YYYY-MM') AS Month_Year
        ,extract(day from logdate) as "day"
        ,cast(avg("IO Busy%") as decimal (18,2)) as "Avg_IO_Busy%"
      From
          (select
           LogDate
          ,cast(avg(ObservedMax990_IOBusy_pct) *100 as decimal(38,2)) as "IO Busy%"
          from vt_system_io_by_day
          group by 1)vt_system_io_by_day
      group by 1,2
      order by 1,2

- name: Chart System Monthly IO for Heatmap
  chart:
    command: chart/heatmap_xLabel_yLabel_Values.py
    params:
      - csvfilepath:vhc--system_monthly_io_heatmap.csv
      - pngfilepath:vhc--system_monthly_io_heatmap.png
      - title:Monthly IO Busy % Heatmap - {{ siteid }}
      - height:6
      - width:{{ (12 * (heatmap_width_scale | default(1.00))) | round(2) }}
      - annotate:{{ annotate_chart | default('True') }}
      - heatmapmin:0
      - heatmapmax:100

- name: Export System Quarterly IO Summary
  connect: source
  export:
    file: vhc--system_quarterly_io_summary.csv
    sql: |
      select
        cast(extract(year from LogDate) as varchar(4)) || '-Q' || cast(((extract(month from LogDate) - 1) / 3 + 1) as varchar(1)) as "Quarter"
        ,cast(avg("IO Busy%") as decimal (18,2)) as "Avg_IO_Busy%"
        ,cast(avg(IO_COD_Total_Active_Pct) * 100 as decimal (18,1)) as "IO_Limit" 
      From
          (select
           cast(cast(LogDate as date format 'yyyy-mm-dd') as varchar(10)) as "LogDate"
          ,cast(avg(ObservedMax990_IOBusy_pct) *100 as decimal(38,2)) as "IO Busy%"
          ,avg(IO_COD_Total_Active_Pct) as IO_COD_Total_Active_Pct
          from vt_system_io_by_day
          group by 1)vt_system_io_by_day
      group by 1
      order by 1

- name: Chart System Quarterly IO Summary
  chart:
    command: chart/ClusteredBar_And_Line.py
    params:
      - "csvfile:vhc--system_quarterly_io_summary.csv"
      - "x_column:Quarter"
      - "title:Quarterly IO Busy Summary - {{ siteid }}"
      - "height:6"
      - "width:12"
      - "save:True" 
      - "bar_columns:IO_Limit,Avg_IO_Busy%" 
      - "bar_colors:#4E95D9,#E97132"
      - "show_percentage:true"
      

- name: Export System Monthly IO Summary
  connect: source
  export:
    file: vhc--system_monthly_io_summary.csv
    sql: |
      select
        TO_CHAR(LogDate, 'YYYY-MM') AS Month_Year
        ,cast(avg("IO Busy%") as decimal (18,2)) as "Avg_IO_Busy%"
        ,cast(avg(IO_COD_Total_Active_Pct) * 100 as decimal (18,1)) as "IO_Limit" 
      From
          (select
           LogDate
          ,cast(avg(ObservedMax990_IOBusy_pct) *100 as decimal(38,2)) as "IO Busy%"
          ,avg(IO_COD_Total_Active_Pct) as IO_COD_Total_Active_Pct
          from vt_system_io_by_day
          group by 1)vt_system_io_by_day
      group by 1
      order by 1

- name: Chart System Monthly IO Summary
  chart:
    command: chart/ClusteredBar_And_Line.py
    params:
      - "csvfile:vhc--system_monthly_io_summary.csv"
      - "x_column:Month_Year"
      - "title:Monthly IO Busy Summary - {{ siteid }}"
      - "height:6"
      - "width:12"
      - "save:True" 
      - "bar_columns:IO_Limit,Avg_IO_Busy%" 
      - "bar_colors:#4E95D9,#E97132"
      - "show_percentage:true"
      

- name: Export System Daily IO Comparison
  connect: source
  export:
    file: vhc--system_daily_io_comparison.csv
    sql: |
      select
        cast(cast(LogDate as date format 'yyyy-mm-dd') as varchar(10)) as "LogDate"
        ,cast(avg(ObservedMax990_IOBusy_pct) *100 as decimal(38,2)) as "IO Busy%"
      From vt_system_io_by_day
      group by 1
      order by 1


### Release Spool:
# ------------------
- name: DROP volatile table to save spool - vt_system_io_by_day
  connect: source
  execute:
    sql: drop table vt_system_io_by_day

    
{% include "vt_dbql_core_trends.j2" %}

- name: Export Activity Count Monthly Summary
  connect: source
  export:
    file: vhc--activity_counts_monthly_summary.csv
    sql: |
      select TO_CHAR(LogDate, 'YYYY-MM') AS Month_Year      
      ,count(distinct LogDate) as LogDayCnt
      ,cast(cast(sum(Statement_Total_Cnt) as decimal(18,2)) /1000000 as decimal(18,2))(FORMAT 'ZZZ,ZZZ,ZZ9.99') as "Total Statements (M)"
      ,cast(cast(sum(Statement_Total_Cnt) as decimal(18,2)) /1000000 as decimal(18,2)) as "Total Statements(M)" --For Chart
      ,cast(cast(sum(Query_Total_Cnt) as decimal(18,2)) /1000000 as decimal(18,2))(FORMAT 'ZZZ,ZZZ,ZZ9.99') as "Total Queries (M)"
      ,cast(cast(sum(Query_Total_Cnt) as decimal(18,2)) /1000000 as decimal(18,2)) as "Total Queries(M)" --For Chart
      ,cast(cast(sum(Statement_Total_Cnt)/LogDayCnt as decimal(18,2)) /1000000 as decimal(18,2))(FORMAT 'ZZZ,ZZZ,ZZ9.99') as "Avg Stmts Per Day (M)"
      ,cast(cast(sum(Query_Total_Cnt)/LogDayCnt as decimal(18,2)) /1000000 as decimal(18,2))(FORMAT 'ZZZ,ZZZ,ZZ9.99') as "Avg Qry Per Day(M)" --For Chart
      ,cast(cast(sum(Statement_Total_Cnt)/LogDayCnt * 30 as decimal(18,2)) /1000000 as decimal(18,2))(FORMAT 'ZZZ,ZZZ,ZZ9.99') as "Avg Stmts Per Month (M)"
      ,cast(cast(sum(Statement_Total_Cnt)/LogDayCnt * 30 as decimal(18,2)) /1000000 as decimal(18,2)) as "Avg Stmts Per Month(M)" --For Chart
      ,cast(cast(sum(Query_Total_Cnt)/LogDayCnt * 30 as decimal(18,2)) /1000000 as decimal(18,2))(FORMAT 'ZZZ,ZZZ,ZZ9.99') as "Avg Qry Per Month (M)"
      ,cast(cast(sum(Query_Total_Cnt)/LogDayCnt * 30 as decimal(18,2)) /1000000 as decimal(18,2)) as "Avg Qry Per Month(M)" --For Chart
      from vt_dbql_core
      group by 1
      order by 1 

- name: "Chart for charting: Activity Count Monthly Summary - VHC"
  chart:
    command: chart/ClusteredBar_And_Line.py
    params:
      - "csvfile:vhc--activity_counts_monthly_summary.csv"
      - "x_column:Month_Year"
      - "title:Activity Count Monthly Summary - {{ siteid }}"
      - "height:6"
      - "width:12"
      - "save:True" 
      - "bar_columns:Total Statements(M),Total Queries(M)" 
      - "bar_colors:#4E95D9,#E97132"
      - "line_columns:Avg Stmts Per Month(M),Avg Qry Per Month(M)" 
      - "line_colors:#4DA32F,#F2B800"
      
- name: Export Activity count Quarterly Summary
  connect: source
  export:
    file: vhc--activity_counts_quarterly_summary.csv
    sql: |
      select cast(extract(year from LogDate) as varchar(4)) || '-Q' || cast(((extract(month from LogDate) - 1) / 3 + 1) as varchar(1)) as "Quarter"
      ,cast(cast(sum(Statement_Total_Cnt) as decimal(18,2)) /1000000 as decimal(18,2))(FORMAT 'ZZZ,ZZZ,ZZ9.99') as "Total Statements (M)"
      ,cast(cast(sum(Statement_Total_Cnt) as decimal(18,2)) /1000000 as decimal(18,2)) as "Total Statements(M)" --For Chart
      ,cast(cast(sum(Query_Total_Cnt) as decimal(18,2)) /1000000 as decimal(18,2))(FORMAT 'ZZZ,ZZZ,ZZ9.99') as "Total Queries (M)"
      ,cast(cast(sum(Query_Total_Cnt) as decimal(18,2)) /1000000 as decimal(18,2)) as "Total Queries(M)" --For Chart
      from vt_dbql_core
      group by 1
      order by 1 

- name: "Chart for charting: Activity Count Quarterly summary - VHC"
  chart:
    command: chart/ClusteredBar_And_Line.py
    params:
      - "csvfile:vhc--activity_counts_quarterly_summary.csv"
      - "x_column:Quarter"
      - "title:Activity Count Quarterly Summary - {{ siteid }}"
      - "height:6"
      - "width:12"
      - "save:True" 
      - "bar_columns:Total Statements(M),Total Queries(M)" 
      - "bar_colors:#4E95D9,#E97132"
      
### Release Spool:
# ------------------
- name: DROP volatile table to save spool - vt_dbql_core
  connect: source
  execute:
    sql: drop table vt_dbql_core          

- name: PPTx final build for Vantage Health Check Trends(v1.0)
  ppt:
    file: ppt/Vantage Health Check Trends v1.0.pptx

    
## End TCA
{% endif %}