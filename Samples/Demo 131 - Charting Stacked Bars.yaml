description: >
  This demonstrated COA charting of HEATMAPS in action, from pulling data through generating
  the final graph.


tasks:

# generate cpu data per day:
{% include "vt_system_cpu_by_day.j2" %}

- name: Export System CPU for Chart
  connect: source
  export:
    file: system_cpu_by_day.csv
    sql: |
      select LogDate
      ,cast(sum(CPU_Idle   ) as decimal(38,4)) / cast(sum(CPU_Total) as decimal(38,4)) * 100 as "CPU Idle %--#AFAFAF"
      ,cast(sum(CPU_IOWait ) as decimal(38,4)) / cast(sum(CPU_Total) as decimal(38,4)) * 100 as "CPU IOWait %--#BD9200"
      ,cast(sum(CPU_OS     ) as decimal(38,4)) / cast(sum(CPU_Total) as decimal(38,4)) * 100 as "CPU OS %--#43A9BD"
      ,cast(sum(CPU_DBS    ) as decimal(38,4)) / cast(sum(CPU_Total) as decimal(38,4)) * 100 as "CPU DBS %--#142CF6"
      ,cast(sum(CPU_Total  ) as decimal(38,4)) / cast(sum(CPU_Total) as decimal(38,4)) * 100 as "CPU Total %--#F01D1D"
      from vt_System_CPU_by_Day
      group by 1


- name: Chart System CPU - Stacked Bars by Day
  chart:
    command: chart/bar_xLabel_yElseStack.py
    params:
      - csvfilepath:system_cpu_by_day.csv
      - pngfilepath:system_cpu_by_day_stacked.png
      - title:System CPU - {{ siteid }}
      - ycolumns:[4,3,2,1]
      - height:6
      - width:12
      - ylabel:CPU Percent to Total
      - "xlabel:"
      - legendxy:(0.5, -0.2)
