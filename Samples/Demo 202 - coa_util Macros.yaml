description: >
  Demonstrate calling / using the coa_util.j2 macro template, and
  specifically, the "validate_variables" macro command.
  The standard pre-processing here is artificially inserted
  in-between two tasks, for demonstration purposes. Normally it is
  prefixed to the top of the script.
version: 1


tasks:

### ============= STANDARD PRE-PROCESSING =============
# SETUP run context, and skip duplicate CREATE vt_* statements :
{% set run = namespace(completed=[], variables={}) if run is not defined else run %}
### import macro to harden variables:
{% import "coa_util.j2" as macro with context %}
### This macro will validate /correct a subset of variables,
### then export ALL variables to a reconcile_variables.csv
{{ macro.validate_variables(run) }}
{% set startdate     = run.variables['startdate']     %}
{% set enddate       = run.variables['enddate']       %}
{% set your_name     = run.variables['your_name']     %}
{% set your_title    = run.variables['your_title']    %}
{% set customer_name = run.variables['customer_name'] %}
{% set tdver = run.variables['tdver'] %}{% set td15 = run.variables['td15'] %}
{% set td16 = run.variables['td16'] %}{% set td17 = run.variables['td17'] %}
### ============= STANDARD PRE-PROCESSING =============
